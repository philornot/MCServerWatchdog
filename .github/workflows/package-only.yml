name: Create Installation Package Only

# Ten workflow tylko tworzy paczkÄ™ instalacyjnÄ…, nie zmienia wersji i nie tworzy release'u

permissions:
  contents: read  # Tylko odczyt repo

on:
  workflow_dispatch:
    inputs:
      version_override:
        description: 'Opcjonalne nadpisanie wersji (jeÅ›li puste, uÅ¼yje version.txt)'
        required: false
        type: string

jobs:
  create-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get version from file or input
        id: version
        run: |
          # SprawdÅº czy podano nadpisanie wersji
          OVERRIDE="${{ github.event.inputs.version_override }}"
          
          if [ -n "$OVERRIDE" ]; then
            # UÅ¼yj podanej wersji
            echo "UÅ¼ywam podanej wersji: $OVERRIDE"
            echo "version=$OVERRIDE" >> $GITHUB_OUTPUT
          elif [ -f "version.txt" ]; then
            # UÅ¼yj wersji z pliku
            VERSION=$(cat version.txt | tr -d '[:space:]')
            echo "Odczytana wersja z pliku: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            # DomyÅ›lna wersja
            echo "Nie znaleziono pliku version.txt, uÅ¼ywam wersji testowej"
            echo "version=test-build" >> $GITHUB_OUTPUT
          fi

      - name: Create installation package
        id: create_package
        run: |
          set -ex  # Zatrzymaj przy bÅ‚Ä™dzie i wyÅ›wietlaj komendy
          
          # Zainstaluj zip
          sudo apt-get update && sudo apt-get install -y zip
          
          # SprawdÅº czy zip dziaÅ‚a
          zip --version
          
          # UtwÃ³rz nazwÄ™ pliku ZIP
          VERSION="${{ steps.version.outputs.version }}"
          ZIP_FILENAME="mcserverwatchdog-v${VERSION}.zip"
          echo "Tworzenie paczki: ${ZIP_FILENAME}"
          
          # Przygotuj katalog tymczasowy
          rm -rf temp_package || true
          mkdir -p temp_package
          
          # Skopiuj pliki
          for file in main.py pretty_logger.py version.txt requirements.txt; do
            if [ -f "$file" ]; then
              echo "Kopiowanie $file"
              cp "$file" temp_package/
            else
              echo "UWAGA: Brak pliku $file"
            fi
          done
          
          # Skopiuj .env.example jeÅ›li istnieje
          if [ -f ".env.example" ]; then
            cp ".env.example" temp_package/.env.example
          fi
          
          # UtwÃ³rz plik README
          cat > temp_package/README.txt << EOF
          MCServerWatchdog v${VERSION}
          ===========================
          
          Aby uruchomiÄ‡ bota:
          1. Upewnij siÄ™, Å¼e masz Pythona 3.10+
          2. Zainstaluj zaleÅ¼noÅ›ci: pip install -r requirements.txt
          3. Skopiuj .env.example do .env i uzupeÅ‚nij
          4. Uruchom: python main.py
          
          WiÄ™cej na: https://github.com/${{ github.repository }}
          EOF
          
          # Listuj zawartoÅ›Ä‡ katalogu
          echo "ZawartoÅ›Ä‡ katalogu temp_package:"
          ls -la temp_package/
          
          # UtwÃ³rz archiwum ZIP
          cd temp_package
          zip -r "../${ZIP_FILENAME}" ./*
          cd ..
          
          # SprawdÅº czy plik ZIP istnieje
          if [ -f "${ZIP_FILENAME}" ]; then
            echo "Paczka utworzona pomyÅ›lnie"
            ls -lh "${ZIP_FILENAME}"
            echo "filename=${ZIP_FILENAME}" >> $GITHUB_OUTPUT
          else
            echo "ERROR: Nie udaÅ‚o siÄ™ utworzyÄ‡ paczki"
            exit 1
          fi

      - name: Upload package as artifact
        uses: actions/upload-artifact@v3
        with:
          name: installation-package
          path: ${{ steps.create_package.outputs.filename }}
          retention-days: 7

      - name: Summary
        run: |
          echo "### ðŸ“¦ Paczka instalacyjna" >> $GITHUB_STEP_SUMMARY
          echo "âœ… **Wersja**: v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¥ **Plik**: ${{ steps.create_package.outputs.filename }}" >> $GITHUB_STEP_SUMMARY
          echo "MoÅ¼esz pobraÄ‡ paczkÄ™ z sekcji Artifacts powyÅ¼ej" >> $GITHUB_STEP_SUMMARY